"use client";
import React from "react";

import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Editor from "../components/editor/index.js";
import { Marked } from "marked";
import { markedHighlight } from "marked-highlight";
import hljs from "highlight.js";
import DOMPurify from "dompurify";
import "highlight.js/styles/xt256.min.css";
import cadenaInicial from "./string.js";
import BtnChangeDisplay from "../components/btn_change_display/index.js";
import {markedEmoji} from "marked-emoji";
import Typewriter from "typewriter-effect";
import Footer from "../components/Footer/index.js";
const marked = new Marked(
  markedHighlight({
    langPrefix: "hljs language-",
    highlight(code, lang, info) {
      const language = hljs.getLanguage(lang) ? lang : "plaintext";
      return hljs.highlight(code, { language }).value;
    },
  }),
);

marked.use({
  async: false,
  gfm: true,
  breaks: true,
});
const options = {
	emojis: {
		"joy": "ðŸ˜‚",
		"tada": "ðŸŽ‰",
    "rocket": "ðŸš€"
	},
	renderer: (token) => token.emoji
};

marked.use(markedEmoji(options));



export default function Home() {
  const [markdown, setMarkdown] = React.useState(cadenaInicial);
  const [displayPosition, setDisplayPosition] = React.useState(false);

  React.useEffect(() => {
    const objetoMarked = marked.parse(markdown);
    document.getElementById("preview").innerHTML =
      DOMPurify.sanitize(objetoMarked);
  }, [markdown]);

  const handleChange = (event) => {
    setMarkdown(event.target.value);
  };
  const handleChangePosition = () => {
    setDisplayPosition(!displayPosition);
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Markdown Previewer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.contenedor_titulo_principal}>
          {" "}
          <h1 className={styles.titulo_principal}>
           
            <Typewriter
                    options={{
                      strings: "Project: Markdown Previewer",
                      autoStart: true,
                      delay: 50,
                      loop: false,
                      deleteSpeed: 0,
                    }}
                  />
          </h1>
          <div className={styles.divisor}></div>
        </div>
        <p className={styles.descripcion}>
          Write markdown code in the <strong>Markdown Editor</strong> to be
          converted to HTML in the <strong>Previewer</strong>
        </p>
        <BtnChangeDisplay handleChangePosition={handleChangePosition} />
        <div
          className={`${styles.container_editores} ${
            displayPosition ? styles.container_editores_change_position : ""
          }`}
        >
          <Editor
            name="Markdown Editor"
            handleChange={handleChange}
            value={markdown}
          />
          <Editor name="HTML Previewer" />
        </div>
      </main>

      <Footer />
    </div>
  );
}
